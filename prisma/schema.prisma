generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model users {
  id                     Int    @id @default(autoincrement())
  email                  String @db.VarChar(250)
  name                   String @db.VarChar(255)
  password               String @db.VarChar(255)
  status                 String @db.VarChar(250)
  verification_code      Int
  password_reset_token   String @db.VarChar(500)
  password_reset_expires String
  balance                Int    @default(0)
  bonus                  Int    @default(0)
  referral_code          String @db.VarChar(255)
  referral_request_count Int 
  tariff                 String @db.VarChar(255)
  tariff_start_date      DateTime
  tariff_end_date        DateTime
  created_at             DateTime @default(now())
  updated_at             DateTime @updatedAt

  role                   Json

  offers  offers[]
  company user_company?

  favorites user_favorites[]

  deals_owned_by_me deals[] @relation("DealsOwned")
  deals_as_client   deals[] @relation("DealsAsClient")

  payments payments[]

  // Relations
  support_chats support_chats[]
}

model bouns_history {
  id          Int @id @default(autoincrement())
  order_id    String @db.VarChar(255) @unique
  user_id     Int
  amount      Int
  status      String
  description String @db.VarChar(1000)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model chat_news {
  id        Int    @id @default(autoincrement())
  title     String @db.VarChar(255)
  content   String @db.VarChar(5000)
  images    Json
  videos    Json
  status    String @db.VarChar(255)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model admin_sections {
  id        Int    @id @default(autoincrement())
  name      String @db.VarChar(255)
  data      Json
}

model user_company {
  id                  Int    @id @default(autoincrement())
  user_id             Int    @unique
  name                String @db.VarChar(10000)
  phone_number        String @db.VarChar(250)
  inn                 String @db.VarChar(250)
  city                Int
  industry            Int
  about_us            String @db.VarChar(250)
  interest_categories Json
  sites               Json
  image_path          String @db.VarChar(1000)
  status              String @db.VarChar(255)
  plan                String @db.VarChar(255)
  is_self_employed    Boolean @default(false)

  city_data     countries_tb @relation(fields: [city], references: [id])
  industry_data Industry     @relation(fields: [industry], references: [id])
  user          users        @relation(fields: [user_id], references: [id], onDelete: Cascade)

  reviews company_reviews[]
}

model push_notifications {
  id          Int    @id @default(autoincrement())
  user_id     Int
  title       String @db.VarChar(255)
  type        String @db.VarChar(255)
  description String @db.VarChar(5000)
  link        String @db.VarChar(1000)
  body        Json
  opened      Boolean @default(false)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
}

model user_favorites {
  id       Int    @id @default(autoincrement())
  user_id  Int
  offer_id Int
  users    users? @relation(fields: [user_id], references: [id])
  offers   offers @relation(fields: [offer_id], references: [id], onDelete: Cascade)
}

model company_reviews {
  id                 Int      @id @default(autoincrement())
  company_id         Int
  creater_company_id Int
  offer_id           Int
  count              Int
  review             String   @db.Text
  created_at         DateTime
  offers             offers?  @relation(fields: [offer_id], references: [id])

  creater_company user_company? @relation(fields: [creater_company_id], references: [id])
}

model countries_tb {
  id             Int            @id @default(autoincrement())
  name           String         @db.VarChar(250)
  name_alt       String         @db.VarChar(255)
  label          String         @db.VarChar(255)
  type           String         @db.VarChar(255)
  typeShort      String         @db.VarChar(255)
  contentType    String         @db.VarChar(255)
  okato          String         @db.VarChar(255)
  oktmo          String         @db.VarChar(255)
  isDualName     Boolean
  isCapital      Boolean
  zip            Int
  population     Int
  yearFounded    String         @db.VarChar(250)
  yearCityStatus Int
  name_en        String         @db.VarChar(200)
  namecase       Json
  coords         Json
  timezone       Json
  region         Json
  user_company   user_company[]
}

model Industry {
  id        Int     @id @default(autoincrement())
  name      String? @db.VarChar(250)
  parent_id Int?

  user_company user_company[]
}

model categories {
  id        Int    @id @default(autoincrement())
  name      String @db.VarChar(250)
  parent_id Int?
}

model offers {
  id          Int    @id @default(autoincrement())
  user_id     Int
  name        String @db.VarChar(1000)
  type        String
  vid         String
  category    Json
  price       Int
  coordinates Json
  description String @db.VarChar(5000)
  images      Json
  videos      Json
  status      String

  user           users            @relation(fields: [user_id], references: [id])
  user_favorites user_favorites[]

  deals_as_offer_owner  deals[] @relation("offerDeals")
  deals_as_offer_client deals[] @relation("offerDealsClient")

  review company_reviews[]
}

model deals {
  id              Int      @id @default(autoincrement())
  owner_id        Int
  owner_offer_id  Int
  client_id       Int
  client_offer_id Int
  status_client   String
  statue_owner    String
  created_at      DateTime

  owner  users @relation("DealsOwned", fields: [owner_id], references: [id])
  client users @relation("DealsAsClient", fields: [client_id], references: [id])

  owner_offer  offers  @relation("offerDeals", fields: [owner_offer_id], references: [id])
  client_offer offers  @relation("offerDealsClient", fields: [client_offer_id], references: [id])
  chats        chats[]
}

model chats {
  id        Int    @id @default(autoincrement())
  chat_name String @db.VarChar(1000)
  deal_id   Int
  user_id   Int

  deal deals @relation(fields: [deal_id], references: [id])

  messages messages[]
}

model messages {
  id               Int      @id @default(autoincrement())
  chat_id          Int
  sender_id        Int
  content          String   @db.VarChar(5000)
  file_type        String?
  file_paths       Json?
  selected_chat_id Int?
  created_at       DateTime

  chats chats? @relation(fields: [chat_id], references: [id])
}

// Support chat models (independent from deals)
model support_chats {
  id         Int      @id @default(autoincrement())
  user_id    Int
  created_at DateTime @default(now())

  user     users              @relation(fields: [user_id], references: [id])
  messages support_messages[]
}

model support_messages {
  id              Int      @id @default(autoincrement())
  support_chat_id Int
  sender_id       Int
  content         String   @db.VarChar(5000)
  file_type       String?
  file_paths      Json?
  created_at      DateTime

  support_chat support_chats @relation(fields: [support_chat_id], references: [id], onDelete: Cascade)
}

model payments {
  id        Int    @id @default(autoincrement())
  user_id   Int
  amount    Int
  status    String
  payment_id String
  created_at DateTime

  user users @relation(fields: [user_id], references: [id])
}


model articles {
  id        Int    @id @default(autoincrement())
  title     String @db.VarChar(255)
  content   String @db.VarChar(5000)
  image     String @db.VarChar(1000)
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}